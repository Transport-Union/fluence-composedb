/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.7.7-363
 *
 */
import { FluencePeer } from '@fluencelabs/fluence';
import type { CallParams$$ } from '@fluencelabs/fluence/dist/internal/compilerSupport/v4'
import {
    callFunction$$,
    registerService$$,
} from '@fluencelabs/fluence/dist/internal/compilerSupport/v4';


// Services

export interface ExpDef {
    newNodeInfo: (node_version: string, air_version: string, callParams: CallParams$$<'node_version' | 'air_version'>) => { air_version: string; node_version: string; } | Promise<{ air_version: string; node_version: string; }>;
    newPeerObject: (peerId: string, public_peer: boolean | null, addresses: string[], neighbors: string[], tested_connections: string[], versions: { air_version: string; node_version: string; } | null, callParams: CallParams$$<'peerId' | 'public_peer' | 'addresses' | 'neighbors' | 'tested_connections' | 'versions'>) => { addresses: string[]; neighbors: string[]; peerId: string; public_peer: boolean | null; tested_connections: string[]; versions: { air_version: string; node_version: string; } | null; } | Promise<{ addresses: string[]; neighbors: string[]; peerId: string; public_peer: boolean | null; tested_connections: string[]; versions: { air_version: string; node_version: string; } | null; }>;
}
export function registerExp(service: ExpDef): void;
export function registerExp(serviceId: string, service: ExpDef): void;
export function registerExp(peer: FluencePeer, service: ExpDef): void;
export function registerExp(peer: FluencePeer, serviceId: string, service: ExpDef): void;
       

export function registerExp(...args: any) {
    registerService$$(
        args,
        {
    "defaultServiceId" : "exp",
    "functions" : {
        "tag" : "labeledProduct",
        "fields" : {
            "newNodeInfo" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "labeledProduct",
                    "fields" : {
                        "node_version" : {
                            "tag" : "scalar",
                            "name" : "string"
                        },
                        "air_version" : {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    }
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "struct",
                            "name" : "NodeInfo",
                            "fields" : {
                                "air_version" : {
                                    "tag" : "scalar",
                                    "name" : "string"
                                },
                                "node_version" : {
                                    "tag" : "scalar",
                                    "name" : "string"
                                }
                            }
                        }
                    ]
                }
            },
            "newPeerObject" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "labeledProduct",
                    "fields" : {
                        "peerId" : {
                            "tag" : "scalar",
                            "name" : "string"
                        },
                        "public_peer" : {
                            "tag" : "option",
                            "type" : {
                                "tag" : "scalar",
                                "name" : "bool"
                            }
                        },
                        "addresses" : {
                            "tag" : "array",
                            "type" : {
                                "tag" : "scalar",
                                "name" : "string"
                            }
                        },
                        "neighbors" : {
                            "tag" : "array",
                            "type" : {
                                "tag" : "scalar",
                                "name" : "string"
                            }
                        },
                        "tested_connections" : {
                            "tag" : "array",
                            "type" : {
                                "tag" : "scalar",
                                "name" : "string"
                            }
                        },
                        "versions" : {
                            "tag" : "option",
                            "type" : {
                                "tag" : "struct",
                                "name" : "NodeInfo",
                                "fields" : {
                                    "air_version" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    },
                                    "node_version" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "struct",
                            "name" : "PeerObject",
                            "fields" : {
                                "public_peer" : {
                                    "tag" : "option",
                                    "type" : {
                                        "tag" : "scalar",
                                        "name" : "bool"
                                    }
                                },
                                "neighbors" : {
                                    "tag" : "array",
                                    "type" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    }
                                },
                                "tested_connections" : {
                                    "tag" : "array",
                                    "type" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    }
                                },
                                "addresses" : {
                                    "tag" : "array",
                                    "type" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    }
                                },
                                "versions" : {
                                    "tag" : "option",
                                    "type" : {
                                        "tag" : "struct",
                                        "name" : "NodeInfo",
                                        "fields" : {
                                            "air_version" : {
                                                "tag" : "scalar",
                                                "name" : "string"
                                            },
                                            "node_version" : {
                                                "tag" : "scalar",
                                                "name" : "string"
                                            }
                                        }
                                    }
                                },
                                "peerId" : {
                                    "tag" : "scalar",
                                    "name" : "string"
                                }
                            }
                        }
                    ]
                }
            }
        }
    }
}
    );
}
      
// Functions
 
export type ExploreResult = [{ addresses: string[]; neighbors: string[]; peerId: string; public_peer: boolean | null; tested_connections: string[]; versions: { air_version: string; node_version: string; } | null; }, { addresses: string[]; neighbors: string[]; peerId: string; public_peer: boolean | null; tested_connections: string[]; versions: { air_version: string; node_version: string; } | null; }[]]
export function explore(
    peer_: string,
    config?: {ttl?: number}
): Promise<ExploreResult>;

export function explore(
    peer: FluencePeer,
    peer_: string,
    config?: {ttl?: number}
): Promise<ExploreResult>;

export function explore(...args: any) {

    let script = `
                    (xor
                     (seq
                      (seq
                       (seq
                        (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                        (call %init_peer_id% ("getDataSrv" "peer") [] peer)
                       )
                       (new $addresses
                        (new $tested_connections
                         (new $po
                          (seq
                           (new $public_peer
                            (seq
                             (seq
                              (seq
                               (call -relay- ("op" "noop") [])
                               (xor
                                (seq
                                 (seq
                                  (seq
                                   (seq
                                    (call peer ("peer" "identify") [] info)
                                    (fold info.$.external_addresses! a-0
                                     (seq
                                      (ap a-0 $addresses)
                                      (next a-0)
                                     )
                                    )
                                   )
                                   (call peer ("kad" "neighborhood") [peer [] []] neighbors)
                                  )
                                  (fold neighbors n-0
                                   (seq
                                    (new $n_addresses
                                     (new $status
                                      (new $versions
                                       (seq
                                        (seq
                                         (seq
                                          (par
                                           (xor
                                            (seq
                                             (call n-0 ("peer" "identify") [] n_info)
                                             (ap "ok" $status)
                                            )
                                            (seq
                                             (seq
                                              (call -relay- ("op" "noop") [])
                                              (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
                                             )
                                             (call -relay- ("op" "noop") [])
                                            )
                                           )
                                           (call peer ("peer" "timeout") [5000 "timeout"] $status)
                                          )
                                          (xor
                                           (seq
                                            (new $status_test
                                             (seq
                                              (fold $status s
                                               (seq
                                                (seq
                                                 (seq
                                                  (call peer ("math" "add") [0 1] incr_idx)
                                                  (ap s $status_test)
                                                 )
                                                 (canon peer $status_test  #status_iter_canon)
                                                )
                                                (xor
                                                 (match #status_iter_canon.length incr_idx
                                                  (null)
                                                 )
                                                 (next s)
                                                )
                                               )
                                               (never)
                                              )
                                              (canon peer $status_test  #status_result_canon)
                                             )
                                            )
                                            (match #status_result_canon.$.[0]! "ok"
                                             (xor
                                              (seq
                                               (seq
                                                (fold info.$.external_addresses! a-1
                                                 (seq
                                                  (ap a-1 $n_addresses)
                                                  (next a-1)
                                                 )
                                                )
                                                (call peer ("exp other" "newNodeInfo") [n_info.$.node_version! n_info.$.air_version!] $versions)
                                               )
                                               (ap n-0 $tested_connections)
                                              )
                                              (seq
                                               (seq
                                                (call -relay- ("op" "noop") [])
                                                (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
                                               )
                                               (call -relay- ("op" "noop") [])
                                              )
                                             )
                                            )
                                           )
                                           (seq
                                            (seq
                                             (ap false $public_peer)
                                             (call peer ("peer" "get_contact") [n-0] contact)
                                            )
                                            (xor
                                             (mismatch contact []
                                              (fold contact.$.[0].addresses! a-2
                                               (seq
                                                (ap a-2 $n_addresses)
                                                (next a-2)
                                               )
                                              )
                                             )
                                             (call peer ("op" "noop") [])
                                            )
                                           )
                                          )
                                         )
                                         (par
                                          (par
                                           (canon peer $public_peer  #public_peer_canon)
                                           (canon peer $n_addresses  #n_addresses_canon)
                                          )
                                          (canon peer $versions  #versions_canon)
                                         )
                                        )
                                        (call peer ("exp other" "newPeerObject") [n-0 #public_peer_canon #n_addresses_canon [] [] #versions_canon] $nbh)
                                       )
                                      )
                                     )
                                    )
                                    (next n-0)
                                   )
                                  )
                                 )
                                 (call -relay- ("op" "noop") [])
                                )
                                (seq
                                 (call -relay- ("op" "noop") [])
                                 (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
                                )
                               )
                              )
                              (par
                               (par
                                (canon %init_peer_id% $public_peer  #public_peer_canon-0)
                                (canon %init_peer_id% $addresses  #addresses_canon)
                               )
                               (canon %init_peer_id% $tested_connections  #tested_connections_canon)
                              )
                             )
                             (call %init_peer_id% ("exp" "newPeerObject") [peer #public_peer_canon-0 #addresses_canon neighbors #tested_connections_canon []] $po)
                            )
                           )
                           (canon %init_peer_id% $po  #po-fix)
                          )
                         )
                        )
                       )
                      )
                      (xor
                       (seq
                        (par
                         (ap #po-fix.$.[0]! po-fix_flatten)
                         (canon %init_peer_id% $nbh  #nbh_canon)
                        )
                        (call %init_peer_id% ("callbackSrv" "response") [po-fix_flatten #nbh_canon])
                       )
                       (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 4])
                      )
                     )
                     (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 5])
                    )
    `
    return callFunction$$(
        args,
        {
    "functionName" : "explore",
    "arrow" : {
        "tag" : "arrow",
        "domain" : {
            "tag" : "labeledProduct",
            "fields" : {
                "peer" : {
                    "tag" : "scalar",
                    "name" : "string"
                }
            }
        },
        "codomain" : {
            "tag" : "unlabeledProduct",
            "items" : [
                {
                    "tag" : "struct",
                    "name" : "PeerObject",
                    "fields" : {
                        "public_peer" : {
                            "tag" : "option",
                            "type" : {
                                "tag" : "scalar",
                                "name" : "bool"
                            }
                        },
                        "neighbors" : {
                            "tag" : "array",
                            "type" : {
                                "tag" : "scalar",
                                "name" : "string"
                            }
                        },
                        "tested_connections" : {
                            "tag" : "array",
                            "type" : {
                                "tag" : "scalar",
                                "name" : "string"
                            }
                        },
                        "addresses" : {
                            "tag" : "array",
                            "type" : {
                                "tag" : "scalar",
                                "name" : "string"
                            }
                        },
                        "versions" : {
                            "tag" : "option",
                            "type" : {
                                "tag" : "struct",
                                "name" : "NodeInfo",
                                "fields" : {
                                    "air_version" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    },
                                    "node_version" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    }
                                }
                            }
                        },
                        "peerId" : {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    }
                },
                {
                    "tag" : "array",
                    "type" : {
                        "tag" : "struct",
                        "name" : "PeerObject",
                        "fields" : {
                            "public_peer" : {
                                "tag" : "option",
                                "type" : {
                                    "tag" : "scalar",
                                    "name" : "bool"
                                }
                            },
                            "neighbors" : {
                                "tag" : "array",
                                "type" : {
                                    "tag" : "scalar",
                                    "name" : "string"
                                }
                            },
                            "tested_connections" : {
                                "tag" : "array",
                                "type" : {
                                    "tag" : "scalar",
                                    "name" : "string"
                                }
                            },
                            "addresses" : {
                                "tag" : "array",
                                "type" : {
                                    "tag" : "scalar",
                                    "name" : "string"
                                }
                            },
                            "versions" : {
                                "tag" : "option",
                                "type" : {
                                    "tag" : "struct",
                                    "name" : "NodeInfo",
                                    "fields" : {
                                        "air_version" : {
                                            "tag" : "scalar",
                                            "name" : "string"
                                        },
                                        "node_version" : {
                                            "tag" : "scalar",
                                            "name" : "string"
                                        }
                                    }
                                }
                            },
                            "peerId" : {
                                "tag" : "scalar",
                                "name" : "string"
                            }
                        }
                    }
                }
            ]
        }
    },
    "names" : {
        "relay" : "-relay-",
        "getDataSrv" : "getDataSrv",
        "callbackSrv" : "callbackSrv",
        "responseSrv" : "callbackSrv",
        "responseFnName" : "response",
        "errorHandlingSrv" : "errorHandlingSrv",
        "errorFnName" : "error"
    }
},
        script
    )
}
